#Makefile Make_model
############################## Change Log ##################################
# 5.1
#
############################################################################
# Define path and compilation 


.SUFFIXES: .C .f90 .F90 .c .o

version        = @PACKAGE_VERSION@
PREFIX         = @prefix@
HAVE_HDF5      = @HAVE_HDF5@
HDF5LIB        = @HDF5LIB@

CHEM	       = @CHEM@
AER 	       = @AER@
MATRIXLEV	   = 1

CCOMP	       = @CCOMP@
CPCOMP	       = @CPCOMP@
FCOMP	       = @FCOMP@
FPCOMP	       = @FPCOMP@

CMACH=       @CMACH@
PAR_DEFS=    @PAR_DEFS@

HAVE_ZLIB      = @HAVE_ZLIB@
ZLIB        = @ZLIB@

ENABLEJULES = @jules@

MOD_EXT   = mod

ZLIB_LIB =  -L$(ZLIB) -lz

ARCHIVE=ar rs

BINDIR = $(PREFIX)/bin

PAR_INCS=./
PAR_LIBS=./

include paths.mk
include objects_model.mk

ifeq ($(ENABLEJULES), true)
JULES_DEFS =-DJULES=1
else
JULES_DEFS =-DJULES=0
JULESID    =
JULES_DEFS =
LIBJULES   =
JULES_LIB  =
JULES_INC  =
endif

#including ifs cumulus scheme
ifeq ($(IFS), ifson)
LIBIFS=ifs.a
else
LIBIFS=
endif

ifndef FPCOMP
$(error You need to set the variable FPCOMP either in configure command line)
endif

ifeq ($(notdir $(FPCOMP)),mpif90)
FC=$(FPCOMP) -f90=$(FCOMP)
FC_LOADER=$(FC)
	
HDF5_LIB        = -L$(HDF5LIB)/lib -lhdf5hl_fortran -lhdf5_fortran -lhdf5_hl -lhdf5 $(ZLIB_LIB)
HDF5_INC        = -I$(HDF5LIB)/include
endif

ifeq ($(notdir $(FPCOMP)),ftn)
FC=$(FPCOMP) 
FC_LOADER=$(FC)
endif

ifeq ($(notdir $(FPCOMP)),h5pfc)
FC=$(FPCOMP) 

FC_LOADER=$(FC) 
endif


ifeq ($(notdir $(FCOMP)),pgf90)
FC_FLAGS=-fast -O3 -fastsse -Munroll=n:4 -Mipa=fast,inline,safe  -Msmart 
CCFLAGS=-O2
FPP=-Mpreprocess
endif 

ifeq ($(notdir $(FCOMP)),ifort)
FC_FLAGS=-O0 -g -traceback 
CCFLAGS=-O0
FPP=-fpp
endif 

ifeq ($(notdir $(FCOMP)),gfortran)
FC_FLAGS= -O0 -fcheck=bounds  -fbacktrace -fcheck=bounds -g -fcheck=all -finit-real=nan # -Wall -ffpe-trap=invalid,zero
#CCFLAGS=-O3
CCFLAGS=-O0
FPP=-cpp
endif 

#FCFLAGS=$(FC_FLAGS) -Wl,--no-as-needed -ldl
FCFLAGS=$(FC_FLAGS) -ldl
FCFLAGS_SIMD=-O3 -g -ldl -xHost -vec-report3

LOADERFLAGS=$(FCFLAGS)


## Define fancy Make  ###
ifndef V
	VERBOSE_FC = @printf '%b ' $(BOLD_BLUE)$(FC)$(NO_COLOUR) \
	                           $(BOLD)$(FCFLAGS)$(NO_COLOUR) \
	                           $(NO_COLOUR)$?$(NO_COLOUR)    \
	                           $(CYAN)"=="$(NO_COLOUR)       \
	                           $(GREEN) $@$ $(NO_COLOUR);   \
	                           printf '\n'; 

	VERBOSE_FC_SIMD = @printf '%b ' $(BOLD_BLUE)$(FC)$(NO_COLOUR) \
	                                  $(BOLD)$(FCFLAGS_SIMD)$(NO_COLOUR) \
	                                  $(NO_COLOUR)$?$(NO_COLOUR)    \
	                                  $(CYAN)"=="$(NO_COLOUR)       \
	                                  $(GREEN) $@$ $(NO_COLOUR);   \
	                                  printf '\n'; 
endif

# Compiler commands.
INCLUDES  = -I$(UTILS_INCS) $(JULES_INC) $(HDF5_INC)
EXTRAFLAGSF = $(JULES_DEFS) $(INCLUDES) $(FCFLAGS) $(FPP)
EXTRAFLAGSF_SIMD = $(JULES_DEFS) $(INCLUDES) $(FCFLAGS_SIMD) $(FPP)
F_COMMAND = $(VERBOSE_FC) $(FC) -c 
F_COMMAND_SIMD = $(VERBOSE_FC_SIMD) $(FC) -c 
F_COMMAND_MACRO = $(F_COMMAND) -D$(AER) -D$(MATRIXLEV)
F_COMMAND_LIGHT = $(FPCOMP) -O0 -c 

# Define objects.
include objects_model.mk

# Define targets.

all: $(EXE)

$(EXE): libjules $(LIBUTILS) $(LIBIFS) $(LIBMODEL) $(MAINOBJ) 
	@echo ""
	$(FC_LOADER) -o $(EXE) rammain.o $(LOADERFLAGS) $(LIBMODEL) $(LIBUTILS) $(LIBIFS) $(JULES_LIB) -L$(PAR_LIBS) $(HDF5_LIB) 
	@echo ""
	@echo Finished building === $(EXE)
	@echo ""

$(MAINOBJ):  $(MAIN) 
	@cp -f $< $(<F:.f90=.f90)
	$(F_COMMAND) $(<F:.f90=.f90) $(EXTRAFLAGSF)
	@rm -f $(<F:.f90=.f90) 

$(LIBMODEL): $(OBJ_MODEL)
	$(ARCHIVE) $(LIBMODEL) $(OBJ_MODEL) $(JULES_OBJ_SFCLYR) $(JULES_OBJ_MEM)

$(LIBUTILS):
	$(MAKE) -f Make_utils 

$(LIBIFS):
	$(MAKE) -f Make_ifs 

libjules:
ifeq ($(ENABLEJULES), true)
	cd ../src/jules/LIB && $(MAKE) 
endif
ifeq ($(notdir $(FCOMP)),gfortran)
#	cp ../src/jules/LIB/SOURCE/MODULES/CONTROL/*.mod ../src/jules/LIB/MODS/
#	cp ../src/jules/LIB/SOURCE/MODULES/PARAMS/*.mod ../src/jules/LIB/MODS/
#	cp ../src/jules/LIB/SOURCE/SUBROUTINES/INITIALISATION/*.mod ../src/jules/LIB/MODS
endif
	
clean:
	$(MAKE) -f Make_utils  clean
	$(MAKE) -f Make_ifs clean
	#cd ../src/jules/LIB && $(MAKE) clean
	rm -f $(OBJ_MODEL) $(MOD_MODEL) $(MAINOBJ) $(JULES_OBJ_SFCLYR) $(JULES_OBJ_MEM) $(EXE) $(LIBMODEL) *.oo

install: 
	install -D $(EXE) $(BINDIR)/$(notdir $(EXE))
	\cp -f $(RAMS_ROOT)/jules.in $(BINDIR)/jules.in
	\cp -rf $(RAMS_ROOT)/tables $(BINDIR)/tables
	\cp -f $(RAMS_ROOT)/RAMSIN_5.1 $(BINDIR)/RAMSIN
 
install-strip: 
	install -D -s $(EXE) $(BINDIR)/$(notdir $(EXE))
	\cp -f $(RAMS_ROOT)/jules.in $(BINDIR)/jules.in
	\cp -rf $(RAMS_ROOT)/tables $(BINDIR)/tables
	\cp -f $(RAMS_ROOT)/RAMSIN_5.1 $(BINDIR)/RAMSIN

 
uninstall:
	rm -f $(BINDIR)/$(notdir $(EXE))
	rm -f $(BINDIR)/jules.in
	rm -rf $(BINDIR)/tables
	rm -f $(BINDIR)/RAMSIN
	
# Define dependencies
include depend_model.mk

.PHONY: all libjules install install-strip uninstall clean
